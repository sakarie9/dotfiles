include /etc/sway/config.d/50-systemd-user.conf
include catppuccin-macchiato

# /usr/local/bin/sway-run

# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term foot

set $menu rofi -show drun -run-shell-command '{terminal} -e zsh -ic "{cmd} && read"'

# Visual
gaps inner 2
#gaps outer 2
smart_gaps on

#font pango: WenQuanYi Micro Hei 9

default_border pixel 2
smart_borders on

seat seat0 xcursor_theme catppuccin-frappe-light-cursors 24

# Bindings
#bindsym Print exec grim -g "$(slurp -d)" - | wl-copy

bindsym $mod+Return exec $term
bindsym $mod+q exec sway-killactive-wrapper
bindsym $mod+d exec --no-startup-id $menu
bindsym $mod+Shift+c reload
bindsym $mod+Shift+p exec wlogout -p layer-shell
# bindsym $mod+v exec cliphist list | rofi -dmenu | cliphist decode | wl-copy
bindsym $mod+v exec copyq toggle

# swayr
#bindsym $mod+tab exec swayr next-window current-workspace

bindsym $mod+tab exec sway-focus-next next
bindsym $mod+w exec swaymsg workspace number $(swaymsg -t get_workspaces | jq '.[] | select(.focused==true) | .name | tonumber + 2')
bindsym $mod+Grave workspace next_on_output

# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10


# set $focus_ws [ $focus_after_move == 'true' ] && swaymsg workspace
#
# ## Action // Move focused window to workspace // $mod + Shift + [number] ##
# bindsym $mod+Shift+1 move container to workspace $ws1, exec $focus_ws $ws1
# bindsym $mod+Shift+2 move container to workspace $ws2, exec $focus_ws $ws2
# bindsym $mod+Shift+3 move container to workspace $ws3, exec $focus_ws $ws3
# bindsym $mod+Shift+4 move container to workspace $ws4, exec $focus_ws $ws4
# bindsym $mod+Shift+5 move container to workspace $ws5, exec $focus_ws $ws5
# bindsym $mod+Shift+6 move container to workspace $ws6, exec $focus_ws $ws6
# bindsym $mod+Shift+7 move container to workspace $ws7, exec $focus_ws $ws7
# bindsym $mod+Shift+8 move container to workspace $ws8, exec $focus_ws $ws8
# bindsym $mod+Shift+9 move container to workspace $ws9, exec $focus_ws $ws9
# bindsym $mod+Shift+0 move container to workspace $ws10, exec $focus_ws $ws10

# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
#bindsym $mod+b splith
#bindsym $mod+v splitv
#bindsym $mod+s layout stacking
bindsym $mod+g layout toggle tabbed split
bindsym $mod+Shift+g layout toggle split stacking
bindsym $mod+f fullscreen
#bindsym $mod+grave layout toggle tabbed stacking
# Toggle the current focus between tiling and floating mode 
bindsym $mod+s floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+Shift+s focus mode_toggle

# Move focus to the parent container
#bindsym $mod+a focus parent

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Resize floating windows with mouse scroll:
# bindsym --whole-window --border $mod+button4 resize shrink height 5 px or 5 ppt
# bindsym --whole-window --border $mod+button5 resize grow height 5 px or 5 ppt
# bindsym --whole-window --border $mod+shift+button4 resize shrink width 5 px or 5 ppt
# bindsym --whole-window --border $mod+shift+button5 resize grow width 5 px or 5 ppt

#
# Volume
#
    bindsym --locked XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 10%+
    bindsym --locked XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 10%-
    bindsym --locked XF86AudioMute exec pamixer -t
#
# Player
#
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioStop exec playerctl stop
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous
#
# Backlight
#
    bindsym XF86MonBrightnessUp exec brightnessctl -c backlight set +5%
    bindsym XF86MonBrightnessDown exec brightnessctl -c backlight set 5%-
#
# App shortcuts
#
    # bindsym $mod+n exec nemo
    bindsym $mod+n exec nautilus
    bindsym $mod+e exec firefox
    bindsym $mod+m exec EDITOR=nvim foot yazi

# Move the currently focused window to the scratchpad
#bindsym $mod+Shift+minus move scratchpad
bindsym $mod+Shift+minus move scratchpad, exec "pkill -RTMIN+7 waybar"

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
#bindsym $mod+minus scratchpad show
bindsym $mod+minus scratchpad show, exec "pkill -RTMIN+7 waybar"


# Screenshots
set $grimshot /usr/share/sway-contrib/grimshot
bindsym Print exec wayfreeze --hide-cursor --after-freeze-cmd '$grimshot --notify copy anything; killall wayfreeze'
# bindsym Print exec $grimshot --notify copy anything
bindsym Shift+Print exec $grimshot --notify copy output
bindsym Ctrl+Print exec $grimshot --notify savecopy anything
bindsym Ctrl+Shift+Print exec $grimshot --notify savecopy output

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

bar {
    position top
    swaybar_command waybar
}
#ea76cb
# target                 title     bg    text   indicator  border
client.focused           $lavender $pink $crust $green $red
client.focused_inactive  $overlay0 $base $text  $rosewater $overlay0
client.unfocused         $overlay0 $base $text  $rosewater $overlay0
client.urgent            $peach    $base $peach $overlay0  $peach
client.placeholder       $overlay0 $base $text  $overlay0  $overlay0
client.background        $base

include $HOME/.config/sway/config.d/*
